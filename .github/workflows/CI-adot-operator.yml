# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License").
# You may not use this file except in compliance with the License.
# A copy of the License is located at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# or in the "license" file accompanying this file. This file is distributed
# on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
# express or implied. See the License for the specific language governing
# permissions and limitations under the License.

name: C/I ADOT Operator
on:
  push:
    branches:

    paths-ignore:
      - '.github/**'
      - '!.github/workflows/CI-adot-operator.yml'
      - '**.md'

env:
  TF_VAR_aws_access_key_id: ${{ secrets.INTEG_TEST_AWS_KEY_ID }}
  TF_VAR_aws_secret_access_key: ${{ secrets.INTEG_TEST_AWS_KEY_SECRET }}

concurrency:
  group: ci-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  build-aotutil:
    runs-on: ubuntu-latest
    steps:
      - name: Check out testing framework
        uses: actions/checkout@v2
        with:
          repository: 'aws-observability/aws-otel-test-framework'
          path: testing-framework

  e2etest-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Login to Public Integration Test ECR
        uses: docker/login-action@v1
        with:
          registry: public.ecr.aws
          username: ${{ secrets.INTEG_TEST_AWS_KEY_ID }}
          password: ${{ secrets.INTEG_TEST_AWS_KEY_SECRET }}
        env:
          AWS_REGION: us-east-1

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.INTEG_TEST_AWS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.INTEG_TEST_AWS_KEY_SECRET }}
          aws-region: us-west-2

  get-testing-suites:
    runs-on: ubuntu-latest
    outputs:
      eks-adot-operator-matrix: ${{ steps.set-matrix.outputs.eks-adot-operator-matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2.3.2

      - name: testing suite for ADOT operator
        id: set-matrix
        run: |
          eks_adot_operator_matrix=$(python e2etest/get-testcases.py eks_adot_operator_matrix)
          echo "::set-output name=eks-adot-operator-matrix::$eks_adot_operator_matrix"
      - name: List testing suites
        run: |
          echo ${{ steps.set-matrix.outputs.eks-adot-operator-matrix }}

  e2etest-eks-adot-operator:
    runs-on: ubuntu-latest
    needs: [get-testing-suites, e2etest-release ]
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix: ${{ fromJson(needs.get-testing-suites.outputs.eks-adot-operator-matrix) }}

    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.INTEG_TEST_AWS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.INTEG_TEST_AWS_KEY_SECRET }}
          aws-region: us-west-2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Set up terraform
        uses: hashicorp/setup-terraform@v1

      - name: Check out testing framework
        uses: actions/checkout@v2
        with:
          repository: 'aws-observability/aws-otel-collector-test-framework'
          path: testing-framework

        #The ADOT collector version that needs to tested against the operator need to be specified in -var="aoc_version=<ADOT-collector-version>", for eg -var="aoc_version=v0.16.0" will test for ADOT collector image on v0.16.0
      - name: Run ADOT Operator testing suite on eks
        run: |
          opts=""
          if [[ -f testing-framework/terraform/testcases/${{ matrix.testcase }}/parameters.tfvars ]] ; then opts="-var-file=../testcases/${{ matrix.testcase }}/parameters.tfvars" ; fi
          cd testing-framework/terraform/eks && terraform init && terraform apply -auto-approve $opts -var="aoc_version=latest" -var="aoc_image_repo=public.ecr.aws/aws-observability/aws-otel-collector:" -var="testcase=../testcases/${{ matrix.testcase }}"

      - name: Destroy resources
        uses: nick-invision/retry@v2
        with:
          max_attempts: 3
          timeout_minutes: 8
          retry_wait_seconds: 20
          command: |
            opts=""
            if [[ -f testing-framework/terraform/testcases/${{ matrix.testcase }}/parameters.tfvars ]] ; then opts="-var-file=../testcases/${{ matrix.testcase }}/parameters.tfvars" ; fi
            cd testing-framework/terraform/eks && terraform destroy -auto-approve $opts

