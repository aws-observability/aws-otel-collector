# Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License").
# You may not use this file except in compliance with the License.
# A copy of the License is located at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# or in the "license" file accompanying this file. This file is distributed
# on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
# express or implied. See the License for the specific language governing
# permissions and limitations under the License.

name: 'nightly soaking test'
on:
  schedule:
    - cron: '0 2 * * *' # every night at 2 am UTC

jobs:
  get-testing-version:
    runs-on: ubuntu-latest
    outputs: 
      testing_version: ${{ steps.get-testing-version.outputs.testing_version }}
    steps:
      - uses: actions/checkout@v2
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.INTEG_TEST_AWS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.INTEG_TEST_AWS_KEY_SECRET }}
          aws-region: us-west-2
      
      - name: download packages as release candidate from s3
        uses: aws-observability/aws-otel-collector-test-framework@deprecating
        with:
          running_type: candidate
          opts: "-t=DownloadCandidate -s=.aoc-stack-test.yml -p=${{ steps.get_version.outputs.version }} -g=${{ github.sha }}"
          
      - name: get testing version
        id: get-testing-version
        run: |
          testing_version=`cat build/packages/TESTING_VERSION`
          echo "::set-output name=testing_version::$testing_version"
          
  get-soaking-test-cases:
    runs-on: ubuntu-latest
    outputs:
      soaking_matrix: ${{ steps.get-test-cases.outputs.soaking_matrix }}
    steps:
      - uses: actions/checkout@v2
        
      - name: Setup Python
        uses: actions/setup-python@v2.1.4
      
      - name: get all the soaking test cases
        id: get-test-cases
        run: |
          soaking_matrix=$(python e2etest/get-testcases.py soaking_matrix)
          echo "::set-output name=soaking_matrix::$soaking_matrix"
          
  get-negative-soaking-test-cases:
    runs-on: ubuntu-latest
    outputs:
      soaking_matrix: ${{ steps.get-test-cases.outputs.soaking_matrix }}
    steps:
      - uses: actions/checkout@v2
      
      - name: Setup Python
        uses: actions/setup-python@v2.1.4
        
      - name: get all the soaking test cases
        id: get-test-cases
        run: |
          soaking_matrix=$(python e2etest/get-testcases.py negative_soaking_matrix)
          echo "::set-output name=soaking_matrix::$soaking_matrix"        
          
  run-soaking-test:
    runs-on: ubuntu-latest
    needs: [get-soaking-test-cases, get-testing-version]
    strategy:
      matrix: ${{ fromJson(needs.get-soaking-test-cases.outputs.soaking_matrix) }}
    steps:
      - uses: actions/checkout@v2
        
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.INTEG_TEST_AWS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.INTEG_TEST_AWS_KEY_SECRET }}
          aws-region: us-west-2
          
      - name: Set up JDK 1.11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      
      - name: Set up terraform
        uses: hashicorp/setup-terraform@v1
      
      - name: Check out testing framework
        uses: actions/checkout@v2
        with:
          repository: 'aws-observability/aws-otel-collector-test-framework'
          path: testing-framework
          
      - name: Run Soaking test
        run: |
          if [[ -f testing-framework/terraform/testcases/${{ matrix.testcase }}/parameters.tfvars ]] ; then opts="-var-file=../testcases/${{ matrix.testcase }}/parameters.tfvars" ; else opts="" ; fi
          cd testing-framework/terraform/soaking && terraform init && terraform apply -auto-approve $opts -var="aoc_version=${{ needs.get-testing-version.testing_version }}" -var="testcase=../testcases/${{ matrix.testcase }}"
          
      - name: Destroy resources
        if: ${{ always() }}
        run: |
          cd testing-framework/terraform/eks && terraform destroy -auto-approve
          
  run-negative-soaking-test:
    runs-on: ubuntu-latest
    needs: [get-negative-soaking-test-cases, get-testing-version]
    strategy:
      matrix: ${{ fromJson(needs.get-negative-soaking-test-cases.outputs.soaking_matrix) }}
    steps:
      - uses: actions/checkout@v2
        
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.INTEG_TEST_AWS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.INTEG_TEST_AWS_KEY_SECRET }}
          aws-region: us-west-2
          
      - name: Set up JDK 1.11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      
      - name: Set up terraform
        uses: hashicorp/setup-terraform@v1
      
      - name: Check out testing framework
        uses: actions/checkout@v2
        with:
          repository: 'aws-observability/aws-otel-collector-test-framework'
          path: testing-framework
          
      - name: Run Soaking test
        run: |
          if [[ -f testing-framework/terraform/testcases/${{ matrix.testcase }}/parameters.tfvars ]] ; then opts="-var-file=../testcases/${{ matrix.testcase }}/parameters.tfvars" ; else opts="" ; fi
          cd testing-framework/terraform/soaking && terraform init && terraform apply -auto-approve $opts -var="negative_soaking=true" -var="aoc_version=${{ needs.get-testing-version.testing_version }}" -var="testcase=../testcases/${{ matrix.testcase }}"
          
      - name: Destroy resources
        if: ${{ always() }}
        run: |
          cd testing-framework/terraform/eks && terraform destroy -auto-approve
