# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License").
# You may not use this file except in compliance with the License.
# A copy of the License is located at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# or in the "license" file accompanying this file. This file is distributed
# on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
# express or implied. See the License for the specific language governing
# permissions and limitations under the License.

name: C/I-Operator
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'the desired version of the Collector to test against the Operator'
        required: false
        default: ''

  push:
    branches:
      - main
      - release/v*
    paths-ignore:
      - '.github/**'
      - '!.github/workflows/CI-Operator.yml'
      - '**.md'

env:
  TESTING_FRAMEWORK_REPO: aws-observability/aws-otel-test-framework
  DDB_TABLE_NAME: BatchTestCache
  NUM_BATCHES: 2


concurrency:
  group: ci-operator${{ github.ref_name }}
  cancel-in-progress: true  

permissions:
  id-token: write
  contents: read

jobs:
  create-test-ref:
    runs-on: ubuntu-latest
    outputs:
      testRef: ${{ steps.setRef.outputs.ref }}
    steps:
      - name: Set testRef output
        id: setRef
        run: |
          if [[ ${{ github.ref_name }} == release/v* ]]; then 
            echo "::set-output name=ref::${{github.ref_name}}"
          else
            echo "::set-output name=ref::terraform"
          fi

  get-testing-suites: 
    runs-on: ubuntu-latest
    needs: [create-test-ref]
    outputs:
      test-case-batch-key: ${{ steps.set-batches.outputs.batch-keys }}
      test-case-batch-value: ${{ steps.set-batches.outputs.batch-values }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: ${{ env.TESTING_FRAMEWORK_REPO }}
          path: testing-framework
          ref: ${{ needs.create-test-ref.outputs.testRef }}

      - name: Set up Go 1.x
        uses: actions/setup-go@v3
        with:
          go-version: '~1.18.9'

      - name: Create test batch key values
        id: set-batches
        run: |
          cd testing-framework/tools/batchTestGenerator
          go build
          ./batchTestGenerator github --testCaseFilePath=./testcases.json --maxBatch=${{ env.NUM_BATCHES }} \
            --include=EKS_ADOT_OPERATOR,EKS_ADOT_OPERATOR_ARM64
      - name: List testing suites
        run: |
          echo ${{ steps.set-batches.outputs.batch-keys }}
          echo ${{ steps.set-batches.outputs.batch-values }}

  run-batch-job:
    runs-on: ubuntu-latest
    needs: [get-testing-suites, create-test-ref]
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.get-testing-suites.outputs.test-case-batch-key) }}

    steps:
        # required for versioning
      - uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Set up terraform
        uses: hashicorp/setup-terraform@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: ${{ secrets.COLLECTOR_ASSUMABLE_ROLE_ARN }}
          aws-region: us-west-2
          # 4 hours
          role-duration-seconds: 14400
      
      - name: Checkout testing framework
        uses: actions/checkout@v3
        with:
          repository: ${{ env.TESTING_FRAMEWORK_REPO }}
          path: testing-framework
          ref: ${{ needs.create-test-ref.outputs.testRef }}

      - name: create test-case-batch file
        run: |
          jsonStr='${{ needs.get-testing-suites.outputs.test-case-batch-value }}'
          jsonStr="$(jq -r '.${{ matrix.BatchKey }} | join("\n")' <<< "${jsonStr}")"
          echo "$jsonStr" >> testing-framework/terraform/test-case-batch
          cat testing-framework/terraform/test-case-batch

      - name: Get TTL_DATE for cache
        id: date
        run: echo "::set-output name=ttldate::$(date -u -d "+7 days" +%s)"

      # Used to set the input string that will be used for comparison in the subsequent
      # versioning step. This is needed since the inputs.version context will be non existent
      # on push events. Doing this allows our shell conditional to function correctly. 
      - name: set input string
        id: inputString
        run: |
          if [[ ${{ github.event_name == 'push' }} ]]; then
            echo "::set-output name=INPUT_VER::''"
          else
            echo "::set-output name=INPUT_VER::${{ github.event.inputs.version }}"
          fi

      - run: ls -R
      # version used is the same as determined during 'e2etest-preparation' to ensure same 'adot-collector-integration-test' image is used
      # if version is specified during manual run of workflow, then that version is used.
      - name: Versioning for testing
        id: versioning
        run: |
          if [[ ${{ github.event_name }} == 'push' ]] || [[ ${{ steps.inputString.outputs.INPUT_VER }} == '' ]]; then
            version="$(cat VERSION)-$(git rev-parse --short HEAD)"
            echo "::set-output name=version::$version"
          else
            echo "::set-output name=version::${{ steps.inputString.outputs.INPUT_VER }}"
          fi     

      - name: get Operator image tag
        id: operator_versioning
        run: bash tools/release/adot-operator-images-mirror/get-operator-tag.sh

      - name: run tests
        run: |
          export TTL_DATE=${{ steps.date.outputs.ttldate }}
          export TF_VAR_aoc_version=${{ steps.versioning.outputs.version }}
          export TF_VAR_operator_tag=${{ steps.operator_versioning.outputs.operator-tag }}
          cd testing-framework/terraform
          make execute-batch-test
          
      - name: output cache misses
        if: ${{ failure() }}
        run: |
          export TF_VAR_aoc_version=${{ steps.versioning.outputs.version }}
          cd testing-framework/terraform
          make checkCacheHits
      
      # This is here just in case workflow cancel
      # We first kill terraform processes to ensure that no state
      # file locks are being held from SIGTERMS dispatched in previous
      # steps. 
      - name: Destroy resources
        if: ${{ cancelled() }}
        shell: bash {0}
        run: |
          ps -ef | grep terraform | grep -v grep | awk '{print $2}' | xargs -n 1 kill
          cd testing-framework/terraform
          make terraformCleanup
